user nginx;                                # worker が動作するユーザー名
worker_processes auto;                     # worker のプロセス数。 auto だと CPU コア数と同数の worker を起動

error_log /var/log/nginx/error.log warn; # warn レベル以上のログを error.log に出力
pid       /var/run/nginx.pid;            # プロセス ID のファイル配置先

events {
  worker_connections 1024; # 1つのプロセスが同時に受付られる接続数。クライアントの数だけでなく全ての接続数であることに注意。
}                          # 例えば、リバースプロキシとして動作する場合バックエンドサーバーともアクセスするので1アクセスで2コネクションとなる。

http {
  include /etc/nginx/conf.d/*.conf;

  include      /etc/nginx/mime.types;    # 拡張子と Content-Type の対応づけをするディレクティブを読み込む
  default_type application/octet-stream; # 上記に以外の Content-Type は application/octet-stream とする

  log_format main '$remote_addr - $remote_user [$time_local] "$request" ' # main という形式名でログフォーマットを定義
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main; # main 形式でアクセスログを /var/log/nginx/access.log に出力

  sendfile on; # OSが提供しているsendfileを使用するか否か。
              # on だと nginx 内部でファイルの読み込みと送信を行わずカーネル空間内で行ってくれるため効率良くファイルを送信できる

  keepalive_timeout 75; # HTTPの持続的な接続時間。デフォルトは75
}
